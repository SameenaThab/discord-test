{"ast":null,"code":"import axios from \"axios\";\nimport { userStoreApi } from \"./stores/users\";\nimport { localStorageKeys } from \"./constants\";\naxios.defaults.withCredentials = true;\n\nconst getRoute = suffix => \"http://localhost:8000\".concat(suffix);\n\nexport const createChannel = async channelName => {\n  await axios.post(getRoute(\"/channels\"), {\n    channelName\n  });\n};\nexport const createMessage = async (channelId, content) => {\n  await axios.post(getRoute(\"/channels/\".concat(channelId, \"/messages\")), {\n    content\n  });\n};\nexport const createUser = async username => {\n  await axios.post(getRoute(\"/users\"), {\n    username\n  });\n};\nexport const logIn = async id => {\n  await axios.post(getRoute(\"/login\"), {\n    id\n  });\n  userStoreApi.setState({\n    activeUserId: id\n  });\n  window.localStorage.setItem(localStorageKeys.USER_ID, id);\n};\nexport const logOut = async () => {\n  await axios.post(getRoute(\"/logout\"));\n  userStoreApi.setState({\n    activeUserId: null\n  });\n  window.localStorage.setItem(localStorageKeys.USER_ID, \"\");\n};\nexport const editMessage = async ({\n  messageId,\n  channelId,\n  content\n}) => {\n  await axios.patch(getRoute(\"/channels/\".concat(channelId, \"/messages/\").concat(messageId)), {\n    content\n  });\n};\nexport const createReaction = async channelName => {\n  await axios.post(getRoute(\"/messages/\".concat(messageId, \"/reactions\")), {\n    content\n  });\n};","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/actions.js"],"names":["axios","userStoreApi","localStorageKeys","defaults","withCredentials","getRoute","suffix","createChannel","channelName","post","createMessage","channelId","content","createUser","username","logIn","id","setState","activeUserId","window","localStorage","setItem","USER_ID","logOut","editMessage","messageId","patch","createReaction"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,gBAAT,QAAiC,aAAjC;AAEAF,KAAK,CAACG,QAAN,CAAeC,eAAf,GAAiC,IAAjC;;AAEA,MAAMC,QAAQ,GAAIC,MAAD,mCAAoCA,MAApC,CAAjB;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAOC,WAAP,IAAuB;AAClD,QAAMR,KAAK,CAACS,IAAN,CAAWJ,QAAQ,CAAC,WAAD,CAAnB,EAAkC;AAAEG,IAAAA;AAAF,GAAlC,CAAN;AACD,CAFM;AAIP,OAAO,MAAME,aAAa,GAAG,OAAOC,SAAP,EAAkBC,OAAlB,KAA8B;AACzD,QAAMZ,KAAK,CAACS,IAAN,CAAWJ,QAAQ,qBAAcM,SAAd,eAAnB,EAAwD;AAAEC,IAAAA;AAAF,GAAxD,CAAN;AACD,CAFM;AAIP,OAAO,MAAMC,UAAU,GAAG,MAAOC,QAAP,IAAoB;AAC5C,QAAMd,KAAK,CAACS,IAAN,CAAWJ,QAAQ,CAAC,QAAD,CAAnB,EAA+B;AAAES,IAAAA;AAAF,GAA/B,CAAN;AACD,CAFM;AAIP,OAAO,MAAMC,KAAK,GAAG,MAAOC,EAAP,IAAc;AACjC,QAAMhB,KAAK,CAACS,IAAN,CAAWJ,QAAQ,CAAC,QAAD,CAAnB,EAA+B;AAAEW,IAAAA;AAAF,GAA/B,CAAN;AACAf,EAAAA,YAAY,CAACgB,QAAb,CAAsB;AAAEC,IAAAA,YAAY,EAAEF;AAAhB,GAAtB;AACAG,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BnB,gBAAgB,CAACoB,OAA7C,EAAsDN,EAAtD;AACD,CAJM;AAMP,OAAO,MAAMO,MAAM,GAAG,YAAY;AAChC,QAAMvB,KAAK,CAACS,IAAN,CAAWJ,QAAQ,CAAC,SAAD,CAAnB,CAAN;AACAJ,EAAAA,YAAY,CAACgB,QAAb,CAAsB;AAAEC,IAAAA,YAAY,EAAE;AAAhB,GAAtB;AACAC,EAAAA,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4BnB,gBAAgB,CAACoB,OAA7C,EAAsD,EAAtD;AACD,CAJM;AAMP,OAAO,MAAME,WAAW,GAAG,OAAO;AAAEC,EAAAA,SAAF;AAAad,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAP,KAA6C;AACtE,QAAMZ,KAAK,CAAC0B,KAAN,CAAYrB,QAAQ,qBAAcM,SAAd,uBAAoCc,SAApC,EAApB,EAAsE;AAC1Eb,IAAAA;AAD0E,GAAtE,CAAN;AAGD,CAJM;AAMP,OAAO,MAAMe,cAAc,GAAG,MAAOnB,WAAP,IAAuB;AACnD,QAAMR,KAAK,CAACS,IAAN,CAAWJ,QAAQ,qBAAcoB,SAAd,gBAAnB,EAAyD;AAAEb,IAAAA;AAAF,GAAzD,CAAN;AACD,CAFM","sourcesContent":["import axios from \"axios\";\nimport { userStoreApi } from \"./stores/users\";\nimport { localStorageKeys } from \"./constants\";\n\naxios.defaults.withCredentials = true;\n\nconst getRoute = (suffix) => `http://localhost:8000${suffix}`;\n\nexport const createChannel = async (channelName) => {\n  await axios.post(getRoute(\"/channels\"), { channelName });\n};\n\nexport const createMessage = async (channelId, content) => {\n  await axios.post(getRoute(`/channels/${channelId}/messages`), { content });\n};\n\nexport const createUser = async (username) => {\n  await axios.post(getRoute(\"/users\"), { username });\n};\n\nexport const logIn = async (id) => {\n  await axios.post(getRoute(\"/login\"), { id });\n  userStoreApi.setState({ activeUserId: id });\n  window.localStorage.setItem(localStorageKeys.USER_ID, id);\n};\n\nexport const logOut = async () => {\n  await axios.post(getRoute(\"/logout\"));\n  userStoreApi.setState({ activeUserId: null });\n  window.localStorage.setItem(localStorageKeys.USER_ID, \"\");\n};\n\nexport const editMessage = async ({ messageId, channelId, content }) => {\n  await axios.patch(getRoute(`/channels/${channelId}/messages/${messageId}`), {\n    content,\n  });\n};\n\nexport const createReaction = async (channelName) => {\n  await axios.post(getRoute(`/messages/${messageId}/reactions`), { content });\n};\n"]},"metadata":{},"sourceType":"module"}