{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/MessageComposer.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"./Button\";\nimport { createMessage } from \"../actions\";\nimport TextInput from \"./TextInput\";\nimport { useActiveChannel } from \"../hooks/channels\";\nimport { useUserStore } from \"../stores/users\";\nimport { MESSAGE_LIMIT } from \"../constants\";\nimport styles from \"./MessageComposer.module.css\";\nconst MESSAGE_LIMIT_BUFFER = 8;\nexport const MessageCharacterWarning = ({\n  content\n}) => {\n  const charactersLeft = MESSAGE_LIMIT - content.length;\n\n  if (charactersLeft > MESSAGE_LIMIT_BUFFER) {\n    return null;\n  }\n\n  return React.createElement(\"div\", {\n    className: classNames(styles.characterLimit, {\n      [styles.characterLimitExceeded]: charactersLeft < 0\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, charactersLeft);\n};\n\nconst MessageComposer = () => {\n  const activeUserId = useUserStore(state => state.activeUserId);\n  const activeChannel = useActiveChannel();\n  const inputRef = React.useRef(null);\n  const isDisabled = activeUserId == null || activeChannel == null;\n\n  const _React$useState = React.useState(\"\"),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        inputValue = _React$useState2[0],\n        setInputValue = _React$useState2[1];\n\n  const onChange = e => {\n    setInputValue(e.target.value);\n  };\n\n  return React.createElement(\"form\", {\n    className: styles.root,\n    onSubmit: event => {\n      event.preventDefault();\n\n      if (inputRef.current != null) {\n        const value = inputRef.current.value;\n\n        if (value !== \"\" && value.length <= MESSAGE_LIMIT) {\n          createMessage(activeChannel.id, inputRef.current.value);\n          inputRef.current.value = \"\";\n          inputRef.current.focus();\n        }\n      }\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MessageCharacterWarning, {\n    content: inputValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    className: styles.input,\n    disabled: isDisabled,\n    onChange: onChange,\n    placeholder: activeChannel == null ? \"Select a channel\" : activeUserId == null ? \"Select a user\" : \"Message #\".concat(activeChannel.name),\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: styles.button,\n    type: \"submit\",\n    disabled: isDisabled || inputValue.length > MESSAGE_LIMIT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Send\")));\n};\n\nexport default MessageComposer;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/MessageComposer.jsx"],"names":["React","classNames","Button","createMessage","TextInput","useActiveChannel","useUserStore","MESSAGE_LIMIT","styles","MESSAGE_LIMIT_BUFFER","MessageCharacterWarning","content","charactersLeft","length","characterLimit","characterLimitExceeded","MessageComposer","activeUserId","state","activeChannel","inputRef","useRef","isDisabled","useState","inputValue","setInputValue","onChange","e","target","value","root","event","preventDefault","current","id","focus","wrapper","input","name","button"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport Button from \"./Button\";\nimport { createMessage } from \"../actions\";\nimport TextInput from \"./TextInput\";\nimport { useActiveChannel } from \"../hooks/channels\";\nimport { useUserStore } from \"../stores/users\";\nimport { MESSAGE_LIMIT } from \"../constants\";\nimport styles from \"./MessageComposer.module.css\";\n\nconst MESSAGE_LIMIT_BUFFER = 8;\n\nexport const MessageCharacterWarning = ({ content }) => {\n  const charactersLeft = MESSAGE_LIMIT - content.length;\n  if (charactersLeft > MESSAGE_LIMIT_BUFFER) {\n    return null;\n  }\n  return (\n    <div\n      className={classNames(styles.characterLimit, {\n        [styles.characterLimitExceeded]: charactersLeft < 0,\n      })}\n    >\n      {charactersLeft}\n    </div>\n  );\n};\n\nconst MessageComposer = () => {\n  const activeUserId = useUserStore((state) => state.activeUserId);\n  const activeChannel = useActiveChannel();\n  const inputRef = React.useRef(null);\n  const isDisabled = activeUserId == null || activeChannel == null;\n\n  const [inputValue, setInputValue] = React.useState(\"\");\n  const onChange = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  return (\n    <form\n      className={styles.root}\n      onSubmit={(event) => {\n        event.preventDefault();\n        if (inputRef.current != null) {\n          const value = inputRef.current.value;\n          if (value !== \"\" && value.length <= MESSAGE_LIMIT) {\n            createMessage(activeChannel.id, inputRef.current.value);\n            inputRef.current.value = \"\";\n            inputRef.current.focus();\n          }\n        }\n      }}\n    >\n      <MessageCharacterWarning content={inputValue} />\n      <div className={styles.wrapper}>\n        <TextInput\n          className={styles.input}\n          disabled={isDisabled}\n          onChange={onChange}\n          placeholder={\n            activeChannel == null\n              ? \"Select a channel\"\n              : activeUserId == null\n              ? \"Select a user\"\n              : `Message #${activeChannel.name}`\n          }\n          ref={inputRef}\n        />\n        <Button\n          className={styles.button}\n          type=\"submit\"\n          disabled={isDisabled || inputValue.length > MESSAGE_LIMIT}\n        >\n          Send\n        </Button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageComposer;\n"]},"metadata":{},"sourceType":"module"}