{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx\";\nimport React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\nconst activeUserId = useUserStore(state => state.activeUserId);\nconst allReactions = useReactionStore(state => state.reactions);\nconst reactionsForMessage = allReactions.filter(reaction => reaction.messageId === messageId && reaction.emoji === emoji);\nconst hasUserReacted = allReactions.filter(reaction => reaction.messageId === messageId && reaction.emoji === emoji);\n\nconst ReactionIcon = ({\n  messageId,\n  emoji\n}) => {\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hasReacted = _React$useState2[0],\n        setHasReacted = _React$useState2[1];\n\n  const reactionFromUser = allReactions.filter(reaction => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n  console.log(\"reactionFromUser\");\n  console.log(reactionFromUser);\n  const count = reactionsForMessage.length;\n  return React.createElement(\"button\", {\n    className: styles.emojiButton,\n    onClick: () => deleteReaction(messageId, emoji),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": \"emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, emoji, \" \", count));\n};\n\nexport default ReactionIcon;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx"],"names":["React","createReaction","deleteReaction","styles","useReactionStore","useUserStore","activeUserId","state","allReactions","reactions","reactionsForMessage","filter","reaction","messageId","emoji","hasUserReacted","ReactionIcon","useState","hasReacted","setHasReacted","reactionFromUser","userId","console","log","count","length","emojiButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;AAGA,MAAMC,YAAY,GAAGD,YAAY,CAAEE,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAjC;AAEA,MAAME,YAAY,GAAGJ,gBAAgB,CAAEG,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAArC;AAEA,MAAMC,mBAAmB,GAAGF,YAAY,CAACG,MAAb,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,SAAT,KAAuBA,SAAvB,IAAoCD,QAAQ,CAACE,KAAT,KAAmBA,KAAzF,CAA5B;AAEA,MAAMC,cAAc,GAAGP,YAAY,CAACG,MAAb,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,SAAT,KAAuBA,SAAvB,IAAoCD,QAAQ,CAACE,KAAT,KAAmBA,KAAzF,CAAvB;;AAEA,MAAOE,YAAY,GAAG,CAAC;AAAEH,EAAAA,SAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA,0BACTd,KAAK,CAACiB,QAAN,CAAe,KAAf,CADS;AAAA;AAAA,QACtCC,UADsC;AAAA,QAC1BC,aAD0B;;AAE7C,QAAMC,gBAAgB,GAAGZ,YAAY,CAACG,MAAb,CAAqBC,QAAD,IAAcA,QAAQ,CAACC,SAAT,KAAuBA,SAAvB,IAAoCD,QAAQ,CAACE,KAAT,KAAmBA,KAAvD,IAAgEF,QAAQ,CAACS,MAAT,KAAoBf,YAAtH,CAAzB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,gBAAZ;AACA,QAAMI,KAAK,GAACd,mBAAmB,CAACe,MAAhC;AACA,SACE;AAAQ,IAAA,SAAS,EAAEtB,MAAM,CAACuB,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAKxB,cAAc,CAACW,SAAD,EAAWC,KAAX,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,kBAAW,OAAjB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,OACaU,KADb,CADJ,CADF;AAOD,CAbD;;AAeA,eAAeR,YAAf","sourcesContent":["import React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\n\n\nconst activeUserId = useUserStore((state) => state.activeUserId);\n\nconst allReactions = useReactionStore((state) => state.reactions);\n\nconst reactionsForMessage = allReactions.filter((reaction) => reaction.messageId === messageId && reaction.emoji === emoji);\n\nconst hasUserReacted = allReactions.filter((reaction) => reaction.messageId === messageId && reaction.emoji === emoji);\n\nconst  ReactionIcon = ({ messageId,emoji }) => {\n  const [hasReacted, setHasReacted] = React.useState(false);\n  const reactionFromUser = allReactions.filter((reaction) => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n  console.log(\"reactionFromUser\");\n  console.log(reactionFromUser);\n  const count=reactionsForMessage.length;\n  return (\n    <button className={styles.emojiButton} onClick={() =>deleteReaction(messageId,emoji)}>\n        <span aria-label=\"emoji\" role=\"img\">\n            {emoji} {count}\n        </span>\n    </button>\n  );\n};\n\nexport default ReactionIcon;"]},"metadata":{},"sourceType":"module"}