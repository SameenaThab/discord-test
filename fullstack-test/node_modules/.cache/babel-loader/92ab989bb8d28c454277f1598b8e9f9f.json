{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx\";\nimport React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\n\nconst ReactionIcon = ({\n  messageId,\n  emoji\n}) => {\n  const _React$useState = React.useState(activeUsersReaction),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hasReacted = _React$useState2[0],\n        setHasReacted = _React$useState2[1];\n\n  const activeUserId = useUserStore(state => state.activeUserId);\n  const allReactions = useReactionStore(state => state.reactions);\n  const reactionsForMessage = allReactions.filter(reaction => reaction.messageId === messageId && reaction.emoji === emoji);\n  const activeUsersReaction = allReactions.find(reaction => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n  console.log(\"hasReacted\");\n  console.log(hasReacted);\n  const count = reactionsForMessage.length;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.emojiButton,\n    onClick: () => createReaction(messageId, emoji),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": \"emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, emoji, \" \", count)), React.createElement(\"button\", {\n    className: styles.emojiButton,\n    onClick: () => deleteReaction(hasUserReacted.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": \"emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"\\u274C \", count)));\n};\n\nexport default ReactionIcon;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx"],"names":["React","createReaction","deleteReaction","styles","useReactionStore","useUserStore","ReactionIcon","messageId","emoji","useState","activeUsersReaction","hasReacted","setHasReacted","activeUserId","state","allReactions","reactions","reactionsForMessage","filter","reaction","find","userId","console","log","count","length","emojiButton","hasUserReacted","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAGA,MAAOC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAAA,0BACTR,KAAK,CAACS,QAAN,CAAeC,mBAAf,CADS;AAAA;AAAA,QACtCC,UADsC;AAAA,QAC1BC,aAD0B;;AAG7C,QAAMC,YAAY,GAAGR,YAAY,CAAES,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAjC;AAEA,QAAME,YAAY,GAAGX,gBAAgB,CAAEU,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAArC;AAEA,QAAMC,mBAAmB,GAAGF,YAAY,CAACG,MAAb,CAAqBC,QAAD,IAAcA,QAAQ,CAACZ,SAAT,KAAuBA,SAAvB,IAAoCY,QAAQ,CAACX,KAAT,KAAmBA,KAAzF,CAA5B;AAEA,QAAME,mBAAmB,GAAGK,YAAY,CAACK,IAAb,CAAmBD,QAAD,IAAcA,QAAQ,CAACZ,SAAT,KAAuBA,SAAvB,IAAoCY,QAAQ,CAACX,KAAT,KAAmBA,KAAvD,IAAgEW,QAAQ,CAACE,MAAT,KAAoBR,YAApH,CAA5B;AAEAS,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYZ,UAAZ;AACA,QAAMa,KAAK,GAACP,mBAAmB,CAACQ,MAAhC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAEtB,MAAM,CAACuB,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAKzB,cAAc,CAACM,SAAD,EAAWC,KAAX,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,kBAAW,OAAjB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,OACagB,KADb,CADJ,CADF,EAMM;AAAQ,IAAA,SAAS,EAAErB,MAAM,CAACuB,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAKxB,cAAc,CAACyB,cAAc,CAACC,EAAhB,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,kBAAW,OAAjB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACOJ,KADP,CADA,CANN,CADF;AAcD,CA5BD;;AA8BA,eAAelB,YAAf","sourcesContent":["import React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\n\n\nconst  ReactionIcon = ({ messageId,emoji }) => {\n  const [hasReacted, setHasReacted] = React.useState(activeUsersReaction);\n\n  const activeUserId = useUserStore((state) => state.activeUserId);\n\n  const allReactions = useReactionStore((state) => state.reactions);\n\n  const reactionsForMessage = allReactions.filter((reaction) => reaction.messageId === messageId && reaction.emoji === emoji);\n\n  const activeUsersReaction = allReactions.find((reaction) => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n\n  console.log(\"hasReacted\");\n  console.log(hasReacted);\n  const count=reactionsForMessage.length;\n  return (\n    <div>\n      <button className={styles.emojiButton} onClick={() =>createReaction(messageId,emoji)}>\n          <span aria-label=\"emoji\" role=\"img\">\n              {emoji} {count}\n          </span>\n      </button>\n          <button className={styles.emojiButton} onClick={() =>deleteReaction(hasUserReacted.id)}>\n          <span aria-label=\"emoji\" role=\"img\">\n              ‚ùå {count}\n          </span>\n      </button>\n    </div>\n  );\n};\n\nexport default ReactionIcon;"]},"metadata":{},"sourceType":"module"}