{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx\";\nimport React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\n\nconst ReactionIcon = ({\n  messageId,\n  emoji\n}) => {\n  const activeUserId = useUserStore(state => state.activeUserId);\n  const allReactions = useReactionStore(state => state.reactions);\n  const reactionsForMessage = allReactions.filter(reaction => reaction.messageId === messageId && reaction.emoji === emoji);\n  const activeUsersReaction = allReactions.find(reaction => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n  console.log(\"activeUsersReaction\");\n  console.log(activeUsersReaction !== undefined);\n\n  const _React$useState = React.useState(activeUsersReaction !== undefined),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        hasReacted = _React$useState2[0],\n        setHasReacted = _React$useState2[1];\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/users/loggedIn\").then(response => {\n      setLoggedIn(response.data);\n      setIsLoadig(false);\n    });\n  }, [loggedIn]);\n  console.log(\"hasReacted\");\n  console.log(hasReacted);\n  const count = reactionsForMessage.length;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: styles.emojiButton,\n    onClick: () => createReaction(messageId, emoji),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": \"emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, emoji, \" \", count)), React.createElement(\"button\", {\n    className: styles.emojiButton,\n    onClick: () => deleteReaction(activeUsersReaction.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    \"aria-label\": \"emoji\",\n    role: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"\\u274C \", count)));\n};\n\nexport default ReactionIcon;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/ReactionIcon.jsx"],"names":["React","createReaction","deleteReaction","styles","useReactionStore","useUserStore","ReactionIcon","messageId","emoji","activeUserId","state","allReactions","reactions","reactionsForMessage","filter","reaction","activeUsersReaction","find","userId","console","log","undefined","useState","hasReacted","setHasReacted","useEffect","Axios","get","then","response","setLoggedIn","data","setIsLoadig","loggedIn","count","length","emojiButton","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,cAAzB,QAA+C,YAA/C;AACA,OAAOC,MAAP,MAAmB,2BAAnB;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAGA,MAAOC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAYC,EAAAA;AAAZ,CAAD,KAAyB;AAC7C,QAAMC,YAAY,GAAGJ,YAAY,CAAEK,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAjC;AAEA,QAAME,YAAY,GAAGP,gBAAgB,CAAEM,KAAD,IAAWA,KAAK,CAACE,SAAlB,CAArC;AAEA,QAAMC,mBAAmB,GAAGF,YAAY,CAACG,MAAb,CAAqBC,QAAD,IAAcA,QAAQ,CAACR,SAAT,KAAuBA,SAAvB,IAAoCQ,QAAQ,CAACP,KAAT,KAAmBA,KAAzF,CAA5B;AAEA,QAAMQ,mBAAmB,GAAGL,YAAY,CAACM,IAAb,CAAmBF,QAAD,IAAcA,QAAQ,CAACR,SAAT,KAAuBA,SAAvB,IAAoCQ,QAAQ,CAACP,KAAT,KAAmBA,KAAvD,IAAgEO,QAAQ,CAACG,MAAT,KAAoBT,YAApH,CAA5B;AAEAU,EAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYJ,mBAAmB,KAAKK,SAApC;;AAV6C,0BAYTrB,KAAK,CAACsB,QAAN,CAAeN,mBAAmB,KAAKK,SAAvC,CAZS;AAAA;AAAA,QAYtCE,UAZsC;AAAA,QAY1BC,aAZ0B;;AAc7CC,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,KAAK,CAACC,GAAN,CAAU,0CAAV,EAAsDC,IAAtD,CAA4DC,QAAD,IAAc;AACrEC,MAAAA,WAAW,CAACD,QAAQ,CAACE,IAAV,CAAX;AACAC,MAAAA,WAAW,CAAC,KAAD,CAAX;AACH,KAHD;AAIH,GALU,EAKR,CAACC,QAAD,CALQ,CAAT;AAOAd,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYG,UAAZ;AACA,QAAMW,KAAK,GAACrB,mBAAmB,CAACsB,MAAhC;AACA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAEhC,MAAM,CAACiC,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAKnC,cAAc,CAACM,SAAD,EAAWC,KAAX,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,kBAAW,OAAjB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKA,KADL,OACa0B,KADb,CADJ,CADF,EAMM;AAAQ,IAAA,SAAS,EAAE/B,MAAM,CAACiC,WAA1B;AAAuC,IAAA,OAAO,EAAE,MAAKlC,cAAc,CAACc,mBAAmB,CAACqB,EAArB,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAM,kBAAW,OAAjB;AAAyB,IAAA,IAAI,EAAC,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACOH,KADP,CADA,CANN,CADF;AAcD,CAtCD;;AAwCA,eAAe5B,YAAf","sourcesContent":["import React from \"react\";\nimport { createReaction, deleteReaction } from \"../actions\";\nimport styles from \"./ReactionIcon.module.css\";\nimport { useReactionStore } from \"../stores/reactions\";\nimport { useUserStore } from \"../stores/users\";\n\n\nconst  ReactionIcon = ({ messageId,emoji }) => {\n  const activeUserId = useUserStore((state) => state.activeUserId);\n\n  const allReactions = useReactionStore((state) => state.reactions);\n\n  const reactionsForMessage = allReactions.filter((reaction) => reaction.messageId === messageId && reaction.emoji === emoji);\n\n  const activeUsersReaction = allReactions.find((reaction) => reaction.messageId === messageId && reaction.emoji === emoji && reaction.userId === activeUserId);\n\n  console.log(\"activeUsersReaction\");\n  console.log(activeUsersReaction !== undefined);\n\n  const [hasReacted, setHasReacted] = React.useState(activeUsersReaction !== undefined);\n\n  useEffect(() => {\n    Axios.get(\"http://localhost:5000/api/users/loggedIn\").then((response) => {\n        setLoggedIn(response.data);\n        setIsLoadig(false);\n    });\n}, [loggedIn]);\n\n  console.log(\"hasReacted\");\n  console.log(hasReacted);\n  const count=reactionsForMessage.length;\n  return (\n    <div>\n      <button className={styles.emojiButton} onClick={() =>createReaction(messageId,emoji)}>\n          <span aria-label=\"emoji\" role=\"img\">\n              {emoji} {count}\n          </span>\n      </button>\n          <button className={styles.emojiButton} onClick={() =>deleteReaction(activeUsersReaction.id)}>\n          <span aria-label=\"emoji\" role=\"img\">\n              ‚ùå {count}\n          </span>\n      </button>\n    </div>\n  );\n};\n\nexport default ReactionIcon;"]},"metadata":{},"sourceType":"module"}