{"ast":null,"code":"import React from\"react\";import Label from\"./Label\";import Select from\"./Select\";import{logIn}from\"../actions\";import{useUserStore}from\"../stores/users\";import styles from\"./UserAccountSelector.module.css\";var UserAccountSelector=function UserAccountSelector(_ref){var onSubmit=_ref.onSubmit;var users=useUserStore(function(state){return state.users;});var activeUserId=useUserStore(function(state){return state.activeUserId;});return React.createElement(\"div\",{className:styles.wrapper},React.createElement(Label,null,\"Select User\"),React.createElement(Select,{className:styles.select,onChange:function onChange(event){var userId=event.currentTarget.value===\"-1\"?null:event.currentTarget.value;logIn(userId);},value:activeUserId==null?\"\":activeUserId},[{id:-1,username:\"None\"}].concat(users).map(function(user){return React.createElement(\"option\",{key:user.id,value:user.id},user.username);})));};export default UserAccountSelector;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/UserAccountSelector.jsx"],"names":["React","Label","Select","logIn","useUserStore","styles","UserAccountSelector","onSubmit","users","state","activeUserId","wrapper","select","event","userId","currentTarget","value","id","username","concat","map","user"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,OAASC,KAAT,KAAsB,YAAtB,CACA,OAASC,YAAT,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,MAAP,KAAmB,kCAAnB,CAEA,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,CAC5C,GAAMC,CAAAA,KAAK,CAAGJ,YAAY,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACD,KAAjB,EAAD,CAA1B,CACA,GAAME,CAAAA,YAAY,CAAGN,YAAY,CAAC,SAACK,KAAD,QAAWA,CAAAA,KAAK,CAACC,YAAjB,EAAD,CAAjC,CAEA,MACE,4BAAK,SAAS,CAAEL,MAAM,CAACM,OAAvB,EACE,oBAAC,KAAD,oBADF,CAEE,oBAAC,MAAD,EACE,SAAS,CAAEN,MAAM,CAACO,MADpB,CAEE,QAAQ,CAAE,kBAACC,KAAD,CAAW,CACnB,GAAMC,CAAAA,MAAM,CACVD,KAAK,CAACE,aAAN,CAAoBC,KAApB,GAA8B,IAA9B,CACI,IADJ,CAEIH,KAAK,CAACE,aAAN,CAAoBC,KAH1B,CAIAb,KAAK,CAACW,MAAD,CAAL,CACD,CARH,CASE,KAAK,CAAEJ,YAAY,EAAI,IAAhB,CAAuB,EAAvB,CAA4BA,YATrC,EAWG,CAAC,CAAEO,EAAE,CAAE,CAAC,CAAP,CAAUC,QAAQ,CAAE,MAApB,CAAD,EAA+BC,MAA/B,CAAsCX,KAAtC,EAA6CY,GAA7C,CAAiD,SAACC,IAAD,QAChD,+BAAQ,GAAG,CAAEA,IAAI,CAACJ,EAAlB,CAAsB,KAAK,CAAEI,IAAI,CAACJ,EAAlC,EACGI,IAAI,CAACH,QADR,CADgD,EAAjD,CAXH,CAFF,CADF,CAsBD,CA1BD,CA4BA,cAAeZ,CAAAA,mBAAf","sourcesContent":["import React from \"react\";\nimport Label from \"./Label\";\nimport Select from \"./Select\";\nimport { logIn } from \"../actions\";\nimport { useUserStore } from \"../stores/users\";\nimport styles from \"./UserAccountSelector.module.css\";\n\nconst UserAccountSelector = ({ onSubmit }) => {\n  const users = useUserStore((state) => state.users);\n  const activeUserId = useUserStore((state) => state.activeUserId);\n\n  return (\n    <div className={styles.wrapper}>\n      <Label>Select User</Label>\n      <Select\n        className={styles.select}\n        onChange={(event) => {\n          const userId =\n            event.currentTarget.value === \"-1\"\n              ? null\n              : event.currentTarget.value;\n          logIn(userId);\n        }}\n        value={activeUserId == null ? \"\" : activeUserId}\n      >\n        {[{ id: -1, username: \"None\" }].concat(users).map((user) => (\n          <option key={user.id} value={user.id}>\n            {user.username}\n          </option>\n        ))}\n      </Select>\n    </div>\n  );\n};\n\nexport default UserAccountSelector;\n"]},"metadata":{},"sourceType":"module"}