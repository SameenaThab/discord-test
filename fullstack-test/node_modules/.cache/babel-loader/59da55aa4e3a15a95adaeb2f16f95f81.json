{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/MessageEditor.jsx\";\nimport React from \"react\";\nimport Button from \"./Button\";\nimport TextInput from \"./TextInput\";\nimport { editMessage } from \"../actions\";\nimport styles from \"./MessageEditor.module.css\";\nimport { MessageCharacterWarning } from \"./MessageComposer\";\nimport { MESSAGE_LIMIT } from \"../constants\";\n\nconst MessageEditor = ({\n  id,\n  content,\n  onClose,\n  channelId\n}) => {\n  const inputRef = React.useRef(null);\n\n  const _React$useState = React.useState(content),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        inputValue = _React$useState2[0],\n        setInputValue = _React$useState2[1];\n\n  React.useLayoutEffect(() => {\n    inputRef.current.focus();\n  }, []);\n  return React.createElement(\"form\", {\n    className: styles.root,\n    onSubmit: async event => {\n      event.preventDefault();\n      await editMessage({\n        messageId: id,\n        channelId,\n        content: inputRef.current.value\n      });\n      onClose();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(MessageCharacterWarning, {\n    content: inputValue,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: styles.wrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(TextInput, {\n    defaultValue: content,\n    className: styles.input,\n    onKeyDown: e => {\n      if (e.key === \"Escape\") {\n        onClose();\n      }\n    },\n    onChange: e => setInputValue(e.target.value),\n    ref: inputRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Button, {\n    className: styles.button,\n    type: \"submit\",\n    disabled: content.length > MESSAGE_LIMIT,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Save\")), React.createElement(\"div\", {\n    className: styles.cancelText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"ESC to\", \" \", React.createElement(\"button\", {\n    onClick: () => onClose(),\n    className: styles.cancelButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Cancel\")));\n};\n\nexport default MessageEditor;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/components/MessageEditor.jsx"],"names":["React","Button","TextInput","editMessage","styles","MessageCharacterWarning","MESSAGE_LIMIT","MessageEditor","id","content","onClose","channelId","inputRef","useRef","useState","inputValue","setInputValue","useLayoutEffect","current","focus","root","event","preventDefault","messageId","value","wrapper","input","e","key","target","button","length","cancelText","cancelButton"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,WAAT,QAA4B,YAA5B;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,uBAAT,QAAwC,mBAAxC;AACA,SAASC,aAAT,QAA8B,cAA9B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA,OAAN;AAAeC,EAAAA,OAAf;AAAwBC,EAAAA;AAAxB,CAAD,KAAyC;AAC7D,QAAMC,QAAQ,GAAGZ,KAAK,CAACa,MAAN,CAAa,IAAb,CAAjB;;AAD6D,0BAGzBb,KAAK,CAACc,QAAN,CAAeL,OAAf,CAHyB;AAAA;AAAA,QAGtDM,UAHsD;AAAA,QAG1CC,aAH0C;;AAI7DhB,EAAAA,KAAK,CAACiB,eAAN,CAAsB,MAAM;AAC1BL,IAAAA,QAAQ,CAACM,OAAT,CAAiBC,KAAjB;AACD,GAFD,EAEG,EAFH;AAIA,SACE;AACE,IAAA,SAAS,EAAEf,MAAM,CAACgB,IADpB;AAEE,IAAA,QAAQ,EAAE,MAAOC,KAAP,IAAiB;AACzBA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMnB,WAAW,CAAC;AAChBoB,QAAAA,SAAS,EAAEf,EADK;AAEhBG,QAAAA,SAFgB;AAGhBF,QAAAA,OAAO,EAAEG,QAAQ,CAACM,OAAT,CAAiBM;AAHV,OAAD,CAAjB;AAKAd,MAAAA,OAAO;AACR,KAVH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAYE,oBAAC,uBAAD;AAAyB,IAAA,OAAO,EAAEK,UAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAaE;AAAK,IAAA,SAAS,EAAEX,MAAM,CAACqB,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,YAAY,EAAEhB,OADhB;AAEE,IAAA,SAAS,EAAEL,MAAM,CAACsB,KAFpB;AAGE,IAAA,SAAS,EAAGC,CAAD,IAAO;AAChB,UAAIA,CAAC,CAACC,GAAF,KAAU,QAAd,EAAwB;AACtBlB,QAAAA,OAAO;AACR;AACF,KAPH;AAQE,IAAA,QAAQ,EAAGiB,CAAD,IAAOX,aAAa,CAACW,CAAC,CAACE,MAAF,CAASL,KAAV,CARhC;AASE,IAAA,GAAG,EAAEZ,QATP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAYE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAER,MAAM,CAAC0B,MADpB;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,QAAQ,EAAErB,OAAO,CAACsB,MAAR,GAAiBzB,aAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF,CAbF,EAiCE;AAAK,IAAA,SAAS,EAAEF,MAAM,CAAC4B,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACS,GADT,EAEE;AAAQ,IAAA,OAAO,EAAE,MAAMtB,OAAO,EAA9B;AAAkC,IAAA,SAAS,EAAEN,MAAM,CAAC6B,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CAjCF,CADF;AA0CD,CAlDD;;AAoDA,eAAe1B,aAAf","sourcesContent":["import React from \"react\";\nimport Button from \"./Button\";\nimport TextInput from \"./TextInput\";\nimport { editMessage } from \"../actions\";\nimport styles from \"./MessageEditor.module.css\";\nimport { MessageCharacterWarning } from \"./MessageComposer\";\nimport { MESSAGE_LIMIT } from \"../constants\";\n\nconst MessageEditor = ({ id, content, onClose, channelId }) => {\n  const inputRef = React.useRef(null);\n\n  const [inputValue, setInputValue] = React.useState(content);\n  React.useLayoutEffect(() => {\n    inputRef.current.focus();\n  }, []);\n\n  return (\n    <form\n      className={styles.root}\n      onSubmit={async (event) => {\n        event.preventDefault();\n        await editMessage({\n          messageId: id,\n          channelId,\n          content: inputRef.current.value,\n        });\n        onClose();\n      }}\n    >\n      <MessageCharacterWarning content={inputValue} />\n      <div className={styles.wrapper}>\n        <TextInput\n          defaultValue={content}\n          className={styles.input}\n          onKeyDown={(e) => {\n            if (e.key === \"Escape\") {\n              onClose();\n            }\n          }}\n          onChange={(e) => setInputValue(e.target.value)}\n          ref={inputRef}\n        />\n        <Button\n          className={styles.button}\n          type=\"submit\"\n          disabled={content.length > MESSAGE_LIMIT}\n        >\n          Save\n        </Button>\n      </div>\n      <div className={styles.cancelText}>\n        ESC to{\" \"}\n        <button onClick={() => onClose()} className={styles.cancelButton}>\n          Cancel\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default MessageEditor;\n"]},"metadata":{},"sourceType":"module"}