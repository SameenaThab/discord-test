{"ast":null,"code":"import _slicedToArray from \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport create from \"zustand\";\nimport socket from \"../lib/socket\";\nimport { clientEvents, serverEvents } from \"../constants\";\n\nconst _create = create((set, get) => ({\n  activeChannelId: null,\n  channels: [],\n  setActiveChannelId: activeChannelId => set({\n    activeChannelId\n  })\n})),\n      _create2 = _slicedToArray(_create, 2),\n      useChannelStore = _create2[0],\n      channelStoreApi = _create2[1];\n\nexport { useChannelStore, channelStoreApi };\nexport const initializeChannelStore = () => {\n  socket.on(serverEvents.UPDATE_ALL_CHANNELS, channels => {\n    const currentState = channelStoreApi.getState();\n    channelStoreApi.setState({\n      channels,\n      activeChannelId: currentState.activeChannelId == null && channels.length > 0 ? channels[0].id : currentState.activeChannelId\n    });\n  });\n  socket.emit(clientEvents.FETCH_ALL_CHANNELS);\n};","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/stores/channels.js"],"names":["create","socket","clientEvents","serverEvents","set","get","activeChannelId","channels","setActiveChannelId","useChannelStore","channelStoreApi","initializeChannelStore","on","UPDATE_ALL_CHANNELS","currentState","getState","setState","length","id","emit","FETCH_ALL_CHANNELS"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,SAAnB;AACA,OAAOC,MAAP,MAAmB,eAAnB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,cAA3C;;gBAEkDH,MAAM,CAAC,CAACI,GAAD,EAAMC,GAAN,MAAe;AACtEC,EAAAA,eAAe,EAAE,IADqD;AAEtEC,EAAAA,QAAQ,EAAE,EAF4D;AAGtEC,EAAAA,kBAAkB,EAAGF,eAAD,IAAqBF,GAAG,CAAC;AAAEE,IAAAA;AAAF,GAAD;AAH0B,CAAf,CAAD,C;;MAA1CG,e;MAAiBC,e;;;AAM/B,OAAO,MAAMC,sBAAsB,GAAG,MAAM;AAC1CV,EAAAA,MAAM,CAACW,EAAP,CAAUT,YAAY,CAACU,mBAAvB,EAA6CN,QAAD,IAAc;AACxD,UAAMO,YAAY,GAAGJ,eAAe,CAACK,QAAhB,EAArB;AACAL,IAAAA,eAAe,CAACM,QAAhB,CAAyB;AACvBT,MAAAA,QADuB;AAEvBD,MAAAA,eAAe,EACbQ,YAAY,CAACR,eAAb,IAAgC,IAAhC,IAAwCC,QAAQ,CAACU,MAAT,GAAkB,CAA1D,GACIV,QAAQ,CAAC,CAAD,CAAR,CAAYW,EADhB,GAEIJ,YAAY,CAACR;AALI,KAAzB;AAOD,GATD;AAUAL,EAAAA,MAAM,CAACkB,IAAP,CAAYjB,YAAY,CAACkB,kBAAzB;AACD,CAZM","sourcesContent":["import create from \"zustand\";\nimport socket from \"../lib/socket\";\nimport { clientEvents, serverEvents } from \"../constants\";\n\nexport const [useChannelStore, channelStoreApi] = create((set, get) => ({\n  activeChannelId: null,\n  channels: [],\n  setActiveChannelId: (activeChannelId) => set({ activeChannelId }),\n}));\n\nexport const initializeChannelStore = () => {\n  socket.on(serverEvents.UPDATE_ALL_CHANNELS, (channels) => {\n    const currentState = channelStoreApi.getState();\n    channelStoreApi.setState({\n      channels,\n      activeChannelId:\n        currentState.activeChannelId == null && channels.length > 0\n          ? channels[0].id\n          : currentState.activeChannelId,\n    });\n  });\n  socket.emit(clientEvents.FETCH_ALL_CHANNELS);\n};\n"]},"metadata":{},"sourceType":"module"}