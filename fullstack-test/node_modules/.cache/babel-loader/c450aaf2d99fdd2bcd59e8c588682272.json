{"ast":null,"code":"var _jsxFileName = \"/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/views/Main.jsx\";\nimport React from \"react\";\nimport Authorization from \"./Authorization\";\nimport Chat from \"./Chat\";\nimport { useUserStore } from \"../stores/users\";\n\nconst Main = () => {\n  const activeUserId = useUserStore(state => state.activeUserId);\n  const users = useUserStore(state => state.users);\n  const isValidActiveId = React.useMemo(() => users.some(user => user.id === activeUserId), [users, activeUserId]);\n\n  if (activeUserId == null || !isValidActiveId) {\n    return React.createElement(Authorization, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    });\n  }\n\n  return React.createElement(Chat, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  });\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/sameenathabassum/Desktop/discord-test/fullstack-test/src/views/Main.jsx"],"names":["React","Authorization","Chat","useUserStore","Main","activeUserId","state","users","isValidActiveId","useMemo","some","user","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,MAAMC,IAAI,GAAG,MAAM;AACjB,QAAMC,YAAY,GAAGF,YAAY,CAAEG,KAAD,IAAWA,KAAK,CAACD,YAAlB,CAAjC;AACA,QAAME,KAAK,GAAGJ,YAAY,CAAEG,KAAD,IAAWA,KAAK,CAACC,KAAlB,CAA1B;AACA,QAAMC,eAAe,GAAGR,KAAK,CAACS,OAAN,CACtB,MAAMF,KAAK,CAACG,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYP,YAAjC,CADgB,EAEtB,CAACE,KAAD,EAAQF,YAAR,CAFsB,CAAxB;;AAKA,MAAIA,YAAY,IAAI,IAAhB,IAAwB,CAACG,eAA7B,EAA8C;AAC5C,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAED,SAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAbD;;AAeA,eAAeJ,IAAf","sourcesContent":["import React from \"react\";\nimport Authorization from \"./Authorization\";\nimport Chat from \"./Chat\";\nimport { useUserStore } from \"../stores/users\";\n\nconst Main = () => {\n  const activeUserId = useUserStore((state) => state.activeUserId);\n  const users = useUserStore((state) => state.users);\n  const isValidActiveId = React.useMemo(\n    () => users.some((user) => user.id === activeUserId),\n    [users, activeUserId]\n  );\n\n  if (activeUserId == null || !isValidActiveId) {\n    return <Authorization />;\n  }\n\n  return <Chat />;\n};\n\nexport default Main;\n"]},"metadata":{},"sourceType":"module"}